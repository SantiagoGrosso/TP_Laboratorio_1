/*
 * InputsYValidaciones.h
 *
 *  Created on: 29 jun. 2022
 *      Author: RYZEN 2700X
 */

#ifndef INPUTSYVALIDACIONES_H_
#define INPUTSYVALIDACIONES_H_

/// @brief Permite pedir un flotante y validarlo.
///
/// @param mensaje Para mostrar un mensaje.
/// @param minimo Validar entre el mínimo.
/// @param maximo Validar entre el máximo.
/// @return Retorna un flotante.
float IngresarFlotante(char mensaje [], float minimo, float maximo);

/// @brief Permite pedir un entero y validarlo.
///
/// @param mensaje Para mostrar un mensaje.
/// @param minimo Validar entre el mínimo.
/// @param maximo Validar entre el máximo.
/// @return Retorna un entero.
int IngresarEntero(char mensaje [], int minimo, int maximo);

/// @brief Pide un un caracter.
///
/// @param mensaje Para mostrar un mensaje.
/// @return	Retorna un caracter.
char IngresarCaracter(char mensaje []);

/// @brief Pide la carga de un vector.
///
/// @param El vector.
/// @param size El tamaño del vector.
void CargarVector(int numeros[], int size);

/// @brief Pide la carga de una cadena.
///
/// @param cadena La cadena.
/// @param mensaje Para mostrar un mensaje.
void CargarCadena(char cadena[],char mensaje[]);

/// @brief Da el id incremental.
///
/// @return Retorna el id incremental.
int obtenerID();

/// @brief Busca espacios y transforma en mayúscula la primera letra de los nombres.
///
/// @param NombreApellido La cadena a cambiar.
void DetectarEspacio (char NombreApellido []);

/// @brief Valida números para que no ingresen ni letras ni caracteres especiales.
///
/// @param numeros Pasa los números como cadena para validarlos.
/// @return Retorna los números validados.
int ValidarNumero (char numeros[]);

/// @brief Valida letras para que no ingresen ni números ni caracteres especiales.
///
/// @param cadena La cadena a validar.
/// @return La cadena validada.
int ValidacionDeCaracteres (char cadena[]);

/// @brief Calcula promedios.
///
/// @param acumulador La variable a ser divida.
/// @param contador La variable por la que se divide.
/// @return Retorna el promedio con la división.
float CalcularPromedio (float acumulador, int contador);


#endif /* INPUTSYVALIDACIONES_H_ */
